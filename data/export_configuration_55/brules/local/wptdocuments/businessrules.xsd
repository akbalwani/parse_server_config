<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 4 U (http://www.xmlspy.com) by Matthew Lourie (Home) -->
<!-- edited with XML Spy v4.3 U (http://www.xmlspy.com) by rp (vlct) -->
<!--W3C Schema generated by XML Spy v4.3 U (http://www.xmlspy.com)-->
<xs:schema elementFormDefault="qualified" version="1.0" id="brules" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:element name="action">
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="external-agent"/>
				<xs:element ref="inprocess-agent"/>
			</xs:choice>
			<xs:attribute name="Order" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="no"/>
						<xs:enumeration value="yes"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="argument" type="xs:string"/>
	<xs:element name="arguments">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="argument" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="attribute" type="xs:string"/>
	<xs:element name="commandline" type="xs:string"/>
	<xs:element name="comparator">
		<xs:complexType>
			<xs:attribute name="name" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="equal"/>
						<xs:enumeration value="not-equal"/>
						<xs:enumeration value="equal-ignore-case"/>
						<xs:enumeration value="match"/>
						<xs:enumeration value="contain"/>
						<xs:enumeration value="less-than"/>
						<xs:enumeration value="less-than-or-equal"/>
						<xs:enumeration value="greater-than"/>
						<xs:enumeration value="greater-than-or-equal"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="condition">
		<xs:complexType>
			<xs:choice>
				<xs:group ref="terms"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="expression">
		<xs:complexType>
			<xs:group ref="terms"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="external-agent">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="commandline"/>
				<xs:element ref="params" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:integer"/>
			<xs:attribute name="executeafter" type="idRef"/>
			<xs:attribute name="streamaccess" type="streamType"/>
			<xs:attribute name="wait" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="function">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="params" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="class" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="inprocess-agent">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="params" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:integer"/>
			<xs:attribute name="executeafter" type="idRef"/>
			<xs:attribute name="streamaccess" type="streamType"/>
			<xs:attribute name="class" type="xs:string"/>
			<xs:attribute name="wait" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="item">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="attribute"/>
				<xs:element ref="comparator"/>
				<xs:element ref="value"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="not">
	    <xs:complexType>
	    	<xs:group ref="terms"/>
	    </xs:complexType>
	</xs:element>
	<xs:element name="operator">
		<xs:complexType>
			<xs:attribute name="name" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="and"/>
						<xs:enumeration value="or"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="param">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="param-name"/>
				<xs:element ref="param-value"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="param-name" type="xs:string"/>
	<xs:element name="param-value" type="xs:string"/>
	<xs:element name="params">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="param" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="rule">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="condition"/>
				<xs:element ref="action"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="action"/>
						<xs:enumeration value="session"/>
						<xs:enumeration value="static"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="precedence" type="xs:integer" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="brpackage">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="rule" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="version" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="value" type="xs:string"/>

	<xs:group name="terms">
		<xs:sequence>
			<xs:choice>
			    <xs:element ref="not"/>
				<xs:element ref="item"/>
				<xs:element ref="expression"/>
				<xs:element ref="function"/>
			</xs:choice>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="operator"/>
				<xs:choice>
				    <xs:element ref="not"/>
					<xs:element ref="item"/>
					<xs:element ref="expression"/>
					<xs:element ref="function"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>

	<xs:simpleType name="ynType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="no"/>
			<xs:enumeration value="yes"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="streamType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="all"/>
			<xs:enumeration value=""/>
			<xs:enumeration value="yes"/>
			<xs:enumeration value="none"/>
			<xs:enumeration value="output"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="idRef">
		<xs:union memberTypes="xs:integer">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:maxLength value="0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
</xs:schema>
